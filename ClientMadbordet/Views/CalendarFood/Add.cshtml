@model ClientMadbordet.ViewModels.CalendarFoodViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@section Scripts
{
    <script src="@Url.Content("~/js/CalendarAdd.js")"></script>
}

@{

    ViewData["Title"] = "add some food";
}

<div class="container">

    @if (ViewData["Error"] != null)
    {
        <div class="alert-danger">
            <p><strong>Error:</strong> @ViewData["Error"].ToString()</p>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert-success">
            <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
        </div>
    }

    <div class="row">
        <h2 style="padding:0">Add to @Model.DateFormatted - @Model.Meal.Name</h2>
    </div>

    <div class="row">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr class="bg-primary">

                        <th>Food</th>
                        <th>Energy</th>
                        <th>Weight</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>

                        <div class="form-group">
                            @Html.LabelFor(x => Model.SelectedCountryIso3, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(x => Model.SelectedCountryIso3, new SelectList(Model.Countries, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Country" })
                                @Html.ValidationMessageFor(x => x.SelectedCountryIso3, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @foreach (CalendarFoodItem foodItem in Model.FoodItems)
                        {

                            <tr id="tableline">
                                <td><h5>@Html.DisplayFor(modelItem => foodItem.Food.Name)</h5></td>
                                @{ var correctEnergy = ((decimal)foodItem.Weight / 100) * foodItem.Food.Energy; }
                                <td><h5>@Html.DisplayFor(modelItem => foodItem.Food.Energy) / @String.Format("{0:0.00}", correctEnergy)</h5></td>
                                <td>
                                    <h5>

                                        <input class="calendarFoodWeight" id="calendarFoodWeight-@foodItem.CalendarFoodItemID"
                                               type="text"
                                               data-calendarfooditemid="@foodItem.CalendarFoodItemID"
                                               value="@Html.DisplayFor(modelItem => foodItem.Weight)" />
                                    </h5>
                                <td>
                                    <form asp-action="Delete" asp-route-id="@foodItem.CalendarFoodItemID">
                                        @{
                                            var back = @Model.DateFormatted + '/' + @Model.Meal.MealID;
                                            if (@Model.queryString != null && Model.queryString != "")
                                            {
                                                back += '/' + @Model.queryString;
                                            }
                                        }
                                        <input id="back"
                                               name="back"
                                               type="hidden"
                                               value="@back" />

                                        <button type="submit">
                                            <span class="fa-stack">
                                                <i class="fa fa-minus"></i>
                                            </span>
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                        <tr>
                            <td><strong>Totals</strong></td>
                            <td><strong>@String.Format("{0:0.00}", Model.TotalEnergy)</strong></td>
                            <td><strong>@String.Format("{0:0.00}", Model.TotalWeight)</strong></td>
                        </tr>
                </tbody>

            </table>
        </div>

        <hr />

        <h4>Foods</h4>
        <section id="searchSection">
            <input id="calendarFoodSearchBox" data-mealid="@Model.Meal.MealID" data-dateformatted="@Model.DateFormatted" type="text" placeholder="search" style="width: 1200px" />
        </section>

        <section id="foodsSection">
            <label id="foodsError"></label>
            <div id="foods" class="row">
                @{

                    var calendarFoods = new ClientMadbordet.ViewModels.CalendarFoodsViewModel();
                    calendarFoods.MealId = Model.Meal.MealID;
                    calendarFoods.Foods = Model.Foods.ToList();
                    calendarFoods.DateFormatted = @Model.DateFormatted;

                    <partial name="_FoodsResults" model="calendarFoods" />
                }
            </div>
        </section>


    </div>
    <div class="row mt-5">
        <a class="btn btn-info" href="/Calendar">Back to List</a>
    </div>

</div>